{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Template for creating a 2 Availability Zone VPC, subnets, security groups and a webserver (Bitnami LAMP stack with username bitnami **WARNING** This template creates Amazon EC2 Instances. You will be billed for the AWS resources used if you create a stack from this template.",
  "Mappings": {
    "WebserverRegionMap": {
      "ap-northeast-1": {
        "AMI": "ami-5b82503a"
      },
      "ap-southeast-1": {
        "AMI": "ami-2e67c24d"
      },
      "ap-southeast-2": {
        "AMI": "ami-3af5c559"
      },
      "eu-central-1": {
        "AMI": "ami-f8768b97"
      },
      "eu-west-1": {
        "AMI": "ami-9c5f25ef"
      },
      "sa-east-1": {
        "AMI": "ami-6a52c106"
      },
      "us-east-1": {
        "AMI": "ami-93fa8284"
      },
      "us-west-1": {
        "AMI": "ami-5f1b553f"
      },
      "us-west-2": {
        "AMI": "ami-c1e13da1"
      }
    }
  },
  "Outputs": {
    "BigipInternalSecurityGroup": {
      "Description": "Private or Internal Security Group",
      "Value": {
        "Ref": "BigipInternalSecurityGroup"
      }
    },
    "DnsServers": {
      "Description": "DNS server for VPC",
      "Value": "10.0.0.2"
    },
    "WebserverPrivateIp": {
      "Description": "Private Ip for Webserver",
      "Value": {
        "Fn::GetAtt": [
          "Webserver",
          "PrivateIp"
        ]
      }
    },
    "WebserverPublicIp": {
      "Description": "Public Ip for Webserver",
      "Value": {
        "Fn::GetAtt": [
          "Webserver",
          "PublicIp"
        ]
      }
    },
    "WebserverPublicUrl": {
      "Description": "Public Url for Webserver",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "Webserver",
                "PublicIp"
              ]
            }
          ]
        ]
      }
    },
    "az1ApplicationSubnet": {
      "Description": "az1Application Subnet Id",
      "Value": {
        "Ref": "az1ApplicationSubnet"
      }
    },
    "az1InternalSubnet": {
      "Description": "az1Internal Subnet Id",
      "Value": {
        "Ref": "az1InternalSubnet"
      }
    },
    "az1managementSubnet": {
      "Description": "az1Management Subnet Id",
      "Value": {
        "Ref": "az1managementSubnet"
      }
    },
    "az1subnet": {
      "Description": "az1External Subnet Id",
      "Value": {
        "Ref": "az1subnet"
      }
    },
    "az2ApplicationSubnet": {
      "Description": "az2Application Subnet Id",
      "Value": {
        "Ref": "az2ApplicationSubnet"
      }
    },
    "az2InternalSubnet": {
      "Description": "az2Internal Subnet Id",
      "Value": {
        "Ref": "az2InternalSubnet"
      }
    },
    "az2managementSubnet": {
      "Description": "az2Management Subnet Id",
      "Value": {
        "Ref": "az2managementSubnet"
      }
    },
    "az2subnet": {
      "Description": "az2External Subnet Id",
      "Value": {
        "Ref": "az2subnet"
      }
    },
    "bigipExternalSecurityGroup": {
      "Description": "Public or External Security Group",
      "Value": {
        "Ref": "bigipExternalSecurityGroup"
      }
    },
    "bigipManagementSecurityGroup": {
      "Description": "Management Security Group",
      "Value": {
        "Ref": "bigipManagementSecurityGroup"
      }
    },
    "vpc": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "vpc"
      }
    }
  },
  "Parameters": {
    "applicationInstanceType": {
      "AllowedValues": [
        "t1.micro",
        "m3.medium",
        "m3.xlarge",
        "m2.xlarge",
        "m3.2xlarge",
        "c3.large",
        "c3.xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type",
      "Default": "t1.micro",
      "Description": "Webserver EC2 instance type",
      "Type": "String"
    },
    "availabilityZone1": {
      "Description": "Name of an Availability Zone in this Region",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "availabilityZone2": {
      "Description": "Name of an Availability Zone in this Region",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "sshKey": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "sshLocation": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "Description": " The IP address range that can be used to SSH to the EC2 instances",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    }
  },
  "Resources": {
    "ApplicationRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Application Route Table"
          },
          {
            "Key": "Network",
            "Value": "Application"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "Az1managementSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone1"
        },
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az1 Management Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Az1subnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone1"
        },
        "CidrBlock": "10.0.1.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az1 External Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Az1subnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ExternalRouteTable"
        },
        "SubnetId": {
          "Ref": "az1subnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "Az2managementSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone2"
        },
        "CidrBlock": "10.0.10.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az2 Management Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Az2subnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone2"
        },
        "CidrBlock": "10.0.11.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az2 External Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Az2subnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ExternalRouteTable"
        },
        "SubnetId": {
          "Ref": "az2subnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "BigipInternalSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow All from Intra-VPC only",
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "FromPort": "-1",
            "IpProtocol": "-1",
            "ToPort": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Bigip Internal Security Group"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "ExternalDefaultRoute": {
      "DependsOn": "attachGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "ExternalRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "ExternalRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "External Route Table"
          },
          {
            "Key": "Network",
            "Value": "External"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "InternalDefaultRoute": {
      "DependsOn": "attachGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "InternalRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "InternalRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Internal Route Table"
          },
          {
            "Key": "Network",
            "Value": "Internal"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "InternetGateway": {
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "ManagementDefaultRoute": {
      "DependsOn": "attachGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "ManagementRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "ManagementRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Management Route Table"
          },
          {
            "Key": "Network",
            "Value": "Mgmt"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "Webserver": {
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "WebserverRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "applicationInstanceType"
        },
        "KeyName": {
          "Ref": "sshKey"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "Description": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  " Webserver Network Interface"
                ]
              ]
            },
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "WebserverSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "az1ApplicationSubnet"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Webserver"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#cloud-config",
                "runcmd:",
                " - sudo docker run --name demo -p 80:80 -d f5devcentral/f5-demo-app:latest"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "WebserverSecurityGroup": {
      "Properties": {
        "GroupDescription": "Enable Access to Webserver",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "-1",
            "IpProtocol": "icmp",
            "ToPort": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Webserver Security Group"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "applicationDefaultRoute": {
      "DependsOn": "attachGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "ApplicationRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "attachGateway": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "az1ApplicationSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone1"
        },
        "CidrBlock": "10.0.3.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az1 Application Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "az1ApplicationSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ApplicationRouteTable"
        },
        "SubnetId": {
          "Ref": "az1ApplicationSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "az1InternalSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone1"
        },
        "CidrBlock": "10.0.2.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az1 Internal Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "az1InternalSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "InternalRouteTable"
        },
        "SubnetId": {
          "Ref": "az1InternalSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "az1managementSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ManagementRouteTable"
        },
        "SubnetId": {
          "Ref": "az1managementSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "az2ApplicationSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone2"
        },
        "CidrBlock": "10.0.13.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az2 Application Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "az2ApplicationSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ApplicationRouteTable"
        },
        "SubnetId": {
          "Ref": "az2ApplicationSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "az2InternalSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "availabilityZone2"
        },
        "CidrBlock": "10.0.12.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": "az2 Internal Subnet"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "az2InternalSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "InternalRouteTable"
        },
        "SubnetId": {
          "Ref": "az2InternalSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "az2managementSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ManagementRouteTable"
        },
        "SubnetId": {
          "Ref": "az2managementSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "bigipExternalSecurityGroup": {
      "Properties": {
        "GroupDescription": "Public or External interface rules",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "4353",
            "IpProtocol": "tcp",
            "ToPort": "4353"
          },
          {
            "CidrIp": "10.0.0.0/16",
            "FromPort": "1026",
            "IpProtocol": "udp",
            "ToPort": "1026"
          },
          {
            "CidrIp": "10.0.0.0/16",
            "FromPort": "6123",
            "IpProtocol": "tcp",
            "ToPort": "6128"
          }
        ],
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Bigip External Security Group"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "bigipManagementSecurityGroup": {
      "Properties": {
        "GroupDescription": "Big-IP Management UI rules",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "sshLocation"
            },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": {
              "Ref": "sshLocation"
            },
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": {
              "Ref": "sshLocation"
            },
            "FromPort": "-1",
            "IpProtocol": "icmp",
            "ToPort": "-1"
          },
          {
            "CidrIp": "10.0.0.0/16",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": "10.0.0.0/16",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          }
        ],
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Name",
            "Value": "Bigip Management Security Group"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "vpc": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    }
  }
}
