{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template for creating a full stack with a 1NIC BIG-IP, a 1 Availability Zone VPC, subnets, security groups and a webserver (Bitnami LAMP stack with username bitnami **WARNING** This template creates Amazon EC2 Instances. You will be billed for the AWS resources used if you create a stack from this template.",
    "Mappings": {
        "BigipRegionMap": {
            "ap-northeast-1": {
                "Best1000Mbps": "ami-acf82acd",
                "Best200Mbps": "ami-6bfc2e0a",
                "Best25Mbps": "ami-a6f92bc7",
                "Better1000Mbps": "ami-aff82ace",
                "Better200Mbps": "ami-69f92b08",
                "Better25Mbps": "ami-1afd2f7b",
                "Good1000Mbps": "ami-3ef82a5f",
                "Good200Mbps": "ami-62fc2e03",
                "Good25Mbps": "ami-3af82a5b"
            },
            "ap-southeast-1": {
                "Best1000Mbps": "ami-ab78ddc8",
                "Best200Mbps": "ami-d37edbb0",
                "Best25Mbps": "ami-4e79dc2d",
                "Better1000Mbps": "ami-d47fdab7",
                "Better200Mbps": "ami-7f78dd1c",
                "Better25Mbps": "ami-4278dd21",
                "Good1000Mbps": "ami-d87cd9bb",
                "Good200Mbps": "ami-da7cd9b9",
                "Good25Mbps": "ami-d47cd9b7"
            },
            "ap-southeast-2": {
                "Best1000Mbps": "ami-c2e8d8a1",
                "Best200Mbps": "ami-c4e8d8a7",
                "Best25Mbps": "ami-bdecdcde",
                "Better1000Mbps": "ami-6febdb0c",
                "Better200Mbps": "ami-b1ebdbd2",
                "Better25Mbps": "ami-42e8d821",
                "Good1000Mbps": "ami-bcebdbdf",
                "Good200Mbps": "ami-dbebdbb8",
                "Good25Mbps": "ami-58e9d93b"
            },
            "eu-central-1": {
                "Best1000Mbps": "ami-2157aa4e",
                "Best200Mbps": "ami-8055a8ef",
                "Best25Mbps": "ami-2c56ab43",
                "Better1000Mbps": "ami-2f57aa40",
                "Better200Mbps": "ami-2854a947",
                "Better25Mbps": "ami-2657aa49",
                "Good1000Mbps": "ami-e357aa8c",
                "Good200Mbps": "ami-2557aa4a",
                "Good25Mbps": "ami-cb55a8a4"
            },
            "eu-west-1": {
                "Best1000Mbps": "ami-8af48ef9",
                "Best200Mbps": "ami-fbeb9188",
                "Best25Mbps": "ami-cbf58fb8",
                "Better1000Mbps": "ami-c8f58fbb",
                "Better200Mbps": "ami-51f18b22",
                "Better25Mbps": "ami-7bf38908",
                "Good1000Mbps": "ami-b5f68cc6",
                "Good200Mbps": "ami-65f58f16",
                "Good25Mbps": "ami-91f18be2"
            },
            "sa-east-1": {
                "Best1000Mbps": "ami-7142d11d",
                "Best200Mbps": "ami-8b5fcce7",
                "Best25Mbps": "ami-8a5ecde6",
                "Better1000Mbps": "ami-955fccf9",
                "Better200Mbps": "ami-c142d1ad",
                "Better25Mbps": "ami-c342d1af",
                "Good1000Mbps": "ami-335dce5f",
                "Good200Mbps": "ami-1359ca7f",
                "Good25Mbps": "ami-1f59ca73"
            },
            "us-east-1": {
                "Best1000Mbps": "ami-1d057e0a",
                "Best200Mbps": "ami-0b7a011c",
                "Best25Mbps": "ami-ce047fd9",
                "Better1000Mbps": "ami-83047f94",
                "Better200Mbps": "ami-84017a93",
                "Better25Mbps": "ami-8f007b98",
                "Good1000Mbps": "ami-98017a8f",
                "Good200Mbps": "ami-a2017ab5",
                "Good25Mbps": "ami-130c7704"
            },
            "us-west-1": {
                "Best1000Mbps": "ami-812668e1",
                "Best200Mbps": "ami-05246a65",
                "Best25Mbps": "ami-f0256b90",
                "Better1000Mbps": "ami-822668e2",
                "Better200Mbps": "ami-44226c24",
                "Better25Mbps": "ami-8b256beb",
                "Good1000Mbps": "ami-49256b29",
                "Good200Mbps": "ami-a72769c7",
                "Good25Mbps": "ami-e5246a85"
            },
            "us-west-2": {
                "Best1000Mbps": "ami-012ef261",
                "Best200Mbps": "ami-8633efe6",
                "Best25Mbps": "ami-792ff319",
                "Better1000Mbps": "ami-5b29f53b",
                "Better200Mbps": "ami-a031edc0",
                "Better25Mbps": "ami-a731edc7",
                "Good1000Mbps": "ami-6a2df10a",
                "Good200Mbps": "ami-532ff333",
                "Good25Mbps": "ami-dc2ef2bc"
            }
        },
        "WebserverRegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-5b82503a"
            },
            "ap-southeast-1": {
                "AMI": "ami-2e67c24d"
            },
            "ap-southeast-2": {
                "AMI": "ami-3af5c559"
            },
            "eu-central-1": {
                "AMI": "ami-f8768b97"
            },
            "eu-west-1": {
                "AMI": "ami-9c5f25ef"
            },
            "sa-east-1": {
                "AMI": "ami-6a52c106"
            },
            "us-east-1": {
                "AMI": "ami-93fa8284"
            },
            "us-west-1": {
                "AMI": "ami-5f1b553f"
            },
            "us-west-2": {
                "AMI": "ami-c1e13da1"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORKING CONFIGURATION"
                    },
                    "Parameters": [
                        "Vpc",
                        "managementSubnetAz1",
                        "managementSubnetAz2",
                        "subnet1Az2",
                        "bigipManagementSecurityGroup",
                        "subnet1Az1",
                        "bigipExternalSecurityGroup",
                        "availabilityZone1",
                        "availabilityZone2"
                    ]
                },
                {
                    "Label": {
                        "default": "INSTANCE CONFIGURATION"
                    },
                    "Parameters": [
                        "adminUsername",
                        "adminPassword",
                        "imageName",
                        "instanceType",
                        "applicationInstanceType",
                        "licenseKey1",
                        "licenseKey2",
                        "managementGuiPort",
                        "sshKey",
                        "restrictedSrcAddress",
                        "iamAccessKey",
                        "iamSecretKey"
                    ]
                },
                {
                    "Label": {
                        "default": "VIRTUAL SERVICE CONFIGURATION"
                    },
                    "Parameters": [
                        "webserverPrivateIp"
                    ]
                },
                {
                    "Label": {
                        "default": "TAGS"
                    },
                    "Parameters": [
                        "application",
                        "environment",
                        "group",
                        "owner",
                        "costcenter"
                    ]
                }
            ],
            "ParameterLabels": {
                "Vpc": {
                    "default": "VPC"
                },
                "adminPassword": {
                    "default": "Admin Password"
                },
                "adminUsername": {
                    "default": "Admin Username"
                },
                "application": {
                    "default": "Application"
                },
                "applicationInstanceType": {
                    "default": "Application Instance Type"
                },
                "availabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "availabilityZone2": {
                    "default": "Availability Zone 2"
                },
                "bigipExternalSecurityGroup": {
                    "default": "BIG-IP External Security Group"
                },
                "bigipManagementSecurityGroup": {
                    "default": "BIG-IP Management Security Group"
                },
                "costcenter": {
                    "default": "Cost center"
                },
                "environment": {
                    "default": "Environment"
                },
                "group": {
                    "default": "Group"
                },
                "iamAccessKey": {
                    "default": "IAM Access Key"
                },
                "iamSecretKey": {
                    "default": "IAM Secret Key"
                },
                "imageName": {
                    "default": "Image Name"
                },
                "instanceType": {
                    "default": "AWS Instance Size"
                },
                "licenseKey1": {
                    "default": "License Key1"
                },
                "managementGuiPort": {
                    "default": "Management GUI Port"
                },
                "managementSubnetAz1": {
                    "default": "Management Subnet AZ1"
                },
                "managementSubnetAz2": {
                    "default": "Management Subnet AZ2"
                },
                "owner": {
                    "default": "Owner"
                },
                "restrictedSrcAddress": {
                    "default": "Restricted Source Addresses"
                },
                "sshKey": {
                    "default": "SSH Key"
                },
                "subnet1Az1": {
                    "default": "Subnet AZ1"
                },
                "subnet1Az2": {
                    "default": "Subnet AZ2"
                },
                "webserverPrivateIp": {
                    "default": "Application IP Address"
                }
            }
        }
    },
    "Outputs": {
        "Az1ApplicationSubnet": {
            "Description": "Az1Application Subnet Id",
            "Value": {
                "Ref": "Az1ApplicationSubnet"
            }
        },
        "Bigip1ExternalInterfacePrivateIp": {
            "Description": "Internally routable IP of the public interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1subnet1Az1Interface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip1InstanceId": {
            "Description": "Instance Id of BIG-IP in Amazon",
            "Value": {
                "Ref": "Bigip1Instance"
            }
        },
        "Bigip1Url": {
            "Description": "BIG-IP Management GUI",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "Bigip1Instance",
                                "PublicIp"
                            ]
                        },
                        ":",
                        {
                            "Ref": "managementGuiPort"
                        }
                    ]
                ]
            }
        },
        "Bigip1VipEipAddress": {
            "Description": "EIP address for VIP",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "Bigip1Instance",
                                "PublicIp"
                            ]
                        },
                        ":80"
                    ]
                ]
            }
        },
        "Bigip1subnet1Az1Interface": {
            "Description": "External interface Id on BIG-IP",
            "Value": {
                "Ref": "Bigip1subnet1Az1Interface"
            }
        },
        "Bigip1subnet1Az1SelfEipAddress": {
            "Description": "IP Address of teh External interface attached to BIG-IP",
            "Value": {
                "Ref": "Bigip1subnet1Az1SelfEipAddress"
            }
        },
        "DnsServers": {
            "Description": "DNS server for VPC",
            "Value": "10.0.0.2"
        },
        "Vpc": {
            "Description": "VPC ID",
            "Value": {
                "Ref": "Vpc"
            }
        },
        "WebserverPublicIp": {
            "Description": "Public IP for Webserver",
            "Value": {
                "Fn::GetAtt": [
                    "Webserver",
                    "PublicIp"
                ]
            }
        },
        "WebserverPublicUrl": {
            "Description": "Public URL for the Webserver",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "Webserver",
                                "PublicIp"
                            ]
                        }
                    ]
                ]
            }
        },
        "availabilityZone1": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "bigipExternalSecurityGroup": {
            "Description": "Public or External Security Group",
            "Value": {
                "Ref": "bigipExternalSecurityGroup"
            }
        },
        "subnet1Az1": {
            "Description": "Az1External Subnet Id",
            "Value": {
                "Ref": "subnet1Az1"
            }
        },
        "webserverPrivateIp": {
            "Description": "Private IP for Webserver",
            "Value": {
                "Fn::GetAtt": [
                    "Webserver",
                    "PrivateIp"
                ]
            }
        }
    },
    "Parameters": {
        "adminPassword": {
            "ConstraintDescription": "Verify your BIG-IP Admin Password",
            "Description": "BIG-IP Admin Password",
            "MaxLength": "255",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "adminUsername": {
            "ConstraintDescription": "Verify your BIG-IP Admin Username",
            "Default": "admin",
            "Description": "BIG-IP Admin Username",
            "MaxLength": "255",
            "MinLength": "1",
            "Type": "String"
        },
        "application": {
            "Default": "f5app",
            "Description": "Name of the Application Tag",
            "Type": "String"
        },
        "applicationInstanceType": {
            "AllowedValues": [
                "t1.micro",
                "m3.medium",
                "m3.xlarge",
                "m2.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type",
            "Default": "t1.micro",
            "Description": "Webserver EC2 instance type",
            "Type": "String"
        },
        "availabilityZone1": {
            "Description": "Name of an Availability Zone in this Region",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "costcenter": {
            "Default": "f5costcenter",
            "Description": "Name of the Cost Center Tag",
            "Type": "String"
        },
        "environment": {
            "Default": "f5env",
            "Description": "Name of the Environment Tag",
            "Type": "String"
        },
        "group": {
            "Default": "f5group",
            "Description": "Name of the Group Tag",
            "Type": "String"
        },
        "imageName": {
            "AllowedValues": [
                "Best25Mbps",
                "Best200Mbps",
                "Best1000Mbps"
            ],
            "ConstraintDescription": "Must be a valid F5 BIG-IP performance type",
            "Default": "Best1000Mbps",
            "Description": "F5 BIG-IP Performance Type",
            "Type": "String"
        },
        "instanceType": {
            "AllowedValues": [
                "m3.2xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "cc2.8xlarge"
            ],
            "ConstraintDescription": "Must be a valid BIG-IP EC2 instance type",
            "Default": "m3.2xlarge",
            "Description": "Size of the F5 BIG-IP Virtual Instance",
            "Type": "String"
        },
        "managementGuiPort": {
            "ConstraintDescription": "Must be a valid, unused port on the BIG-IP.",
            "Default": "443",
            "Description": "Port for the management GUI",
            "Type": "Number"
        },
        "owner": {
            "Default": "f5owner",
            "Description": "Name of the Owner Tag",
            "Type": "String"
        },
        "restrictedSrcAddress": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "sshKey": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "ApplicationDefaultRoute": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "ApplicationRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ApplicationRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Application Route Table:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Application"
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "AttachGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "Az1ApplicationSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone1"
                },
                "CidrBlock": "10.0.3.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "1",
                                    " Application Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "Az1ApplicationSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ApplicationRouteTable"
                },
                "SubnetId": {
                    "Ref": "Az1ApplicationSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az1ExternalSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ExternalRouteTable"
                },
                "SubnetId": {
                    "Ref": "subnet1Az1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Bigip1Instance": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "001-unpack-libs": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "tar xvzf /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/;",
                                            "mv /config/cloud/aws/F5Networks-f5-cloud-libs-* /config/cloud/aws/f5-cloud-libs;",
                                            "cd /config/cloud/aws/f5-cloud-libs;",
                                            "npm install --production;"
                                        ]
                                    ]
                                }
                            },
                            "002-1nic-setup": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--file /config/cloud/aws/f5-cloud-libs/scripts/aws/1nicSetup.sh",
                                            "--cwd /config/cloud/aws/f5-cloud-libs/scripts/aws",
                                            "-o /var/log/1nicSetup.log",
                                            "--background",
                                            "--signal 1_NIC_SETUP_DONE"
                                        ]
                                    ]
                                }
                            },
                            "003-onboard-BIG-IP": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "NAME_SERVER=`/config/cloud/aws/f5-cloud-libs/scripts/aws/getNameServer.sh eth0`;",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/onboard.js",
                                            "--ssl-port '",
                                            {
                                                "Ref": "managementGuiPort"
                                            },
                                            "'",
                                            "--wait-for 1_NIC_SETUP_DONE",
                                            "--log-level verbose",
                                            "-o  /var/log/onboard.log",
                                            "--background",
                                            "--no-reboot",
                                            "--host localhost",
                                            "--user admin",
                                            "--password '",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'",
                                            "--update-user 'user:",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            ",password:",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            ",role:admin'",
                                            "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
                                            "--ntp 0.us.pool.ntp.org",
                                            "--ntp 1.us.pool.ntp.org",
                                            "--tz UTC",
                                            "--dns ${NAME_SERVER}",
                                            "--module ltm:nominal",
                                            "--module asm:nominal"
                                        ]
                                    ]
                                }
                            },
                            "005-custom-config": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--wait-for ONBOARD_DONE",
                                            "--file /config/cloud/aws/custom-config.sh",
                                            "--cwd /config/cloud/aws",
                                            "--log-level verbose",
                                            "-o /var/log/custom-config.log",
                                            "--background"
                                        ]
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/config/cloud/aws/custom-config.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            ". /config/cloud/aws/custom.config\n",
                                            ". /config/cloud/aws/firstrun.utils\n",
                                            "date\n",
                                            "echo 'starting tmsh config'\n",
                                            "tmsh modify sys httpd ssl-port ${MANAGEMENT_GUI_PORT}\n",
                                            "tmsh modify net self-allow defaults add { tcp:6123 tcp:6124 tcp:6125 tcp:6126 tcp:6127 tcp:6128 }\n",
                                            "tmsh save /sys config\n",
                                            "checkStatusnoret\n",
                                            "sleep 20 \n",
                                            "tmsh save /sys config\n",
                                            "tmsh create ltm pool ${APPNAME}-pool members add { ${POOLMEM}:${POOLMEMPORT} } monitor http\n",
                                            "curl -o /home/admin/asm-policy-linux-high.xml http://cdn.f5.com/product/templates/utils/asm-policy-linux-high.xml \n",
                                            "tmsh load asm policy file /home/admin/asm-policy-linux-high.xml\n",
                                            "# modify asm policy names below (ex. /Common/linux-high) to match name in xml\n",
                                            "tmsh modify asm policy /Common/linux-high active\n",
                                            "tmsh create ltm policy app-ltm-policy strategy first-match legacy\n",
                                            "tmsh modify ltm policy app-ltm-policy controls add { asm }\n",
                                            "tmsh modify ltm policy app-ltm-policy rules add { associate-asm-policy { actions replace-all-with { 0 { asm request enable policy /Common/linux-high } } } }\n",
                                            "tmsh create ltm virtual /Common/${APPNAME}-${VIRTUALSERVERPORT} { destination 0.0.0.0:${VIRTUALSERVERPORT} mask any ip-protocol tcp policies replace-all-with { app-ltm-policy { } } pool /Common/${APPNAME}-pool profiles replace-all-with { http { } tcp { } websecurity { } } security-log-profiles replace-all-with { \"Log illegal requests\" } source 0.0.0.0/0 source-address-translation { type automap } translate-address enabled translate-port enabled}\n",
                                            "tmsh save /sys config\n",
                                            "date\n",
                                            "# remove_license_from_bigiq.sh uses firstrun.config but for security purposes, typically want to remove firstrun.config\n",
                                            "# rm /config/cloud/aws/firstrun.config\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/custom.config": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "HOSTNAME=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
                                            "BIGIP_ADMIN_USERNAME='",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            "'\n",
                                            "BIGIP_ADMIN_PASSWORD='",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'\n",
                                            "MANAGEMENT_GUI_PORT='",
                                            {
                                                "Ref": "managementGuiPort"
                                            },
                                            "'\n",
                                            "GATEWAY_MAC=`ifconfig eth0 | egrep HWaddr | awk '{print tolower($5)}'`\n",
                                            "GATEWAY_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`\n",
                                            "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}\n",
                                            "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}\n",
                                            "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`\n",
                                            "VPC_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/vpc-ipv4-cidr-block`\n",
                                            "VPC_NET=${VPC_CIDR_BLOCK%/*}\n",
                                            "VPC_PREFIX=${VPC_CIDR_BLOCK#*/}\n",
                                            "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+2 }'`\n",
                                            "POOLMEM='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Webserver",
                                                    "PrivateIp"
                                                ]
                                            },
                                            "'\n",
                                            "POOLMEMPORT=80\n",
                                            "APPNAME='demo-app-1'\n",
                                            "VIRTUALSERVERPORT=80\n",
                                            "CRT='default.crt'\n",
                                            "KEY='default.key'\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/firstrun.utils": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/firstrun.utils"
                            },
                            "/config/cloud/f5-cloud-libs.tar.gz": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/develop"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "BigipRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "imageName"
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "instanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Public or External Interface",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1subnet1Az1Interface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Big-IP: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "Bigip1Instance",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "Bigip1subnet1Az1Interface": {
            "Properties": {
                "Description": "Public External Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipExternalSecurityGroup"
                    }
                ],
                "SecondaryPrivateIpAddressCount": "1",
                "SubnetId": {
                    "Ref": "subnet1Az1"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "Bigip1subnet1Az1SelfEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip1subnet1Az1SelfEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip1subnet1Az1SelfEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip1subnet1Az1Interface"
                },
                "PrivateIpAddress": {
                    "Fn::GetAtt": [
                        "Bigip1subnet1Az1Interface",
                        "PrimaryPrivateIpAddress"
                    ]
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "ExternalDefaultRoute": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "ExternalRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ExternalRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "External Route Table",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "External"
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "InternetGateway: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "Vpc": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Vpc: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "Webserver": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "WebserverRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "applicationInstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "Description": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    " Webserver Network Interface"
                                ]
                            ]
                        },
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "WebserverSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "Az1ApplicationSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Webserver:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#cloud-config",
                                "runcmd:",
                                " - sudo docker run --name demo -p 80:80 -d f5devcentral/f5-demo-app:latest"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "WebserverSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable Access to Webserver",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Webserver Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "bigipExternalSecurityGroup": {
            "Properties": {
                "GroupDescription": "Public or External interface rules",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": {
                            "Ref": "managementGuiPort"
                        },
                        "IpProtocol": "tcp",
                        "ToPort": {
                            "Ref": "managementGuiPort"
                        }
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "4353",
                        "IpProtocol": "tcp",
                        "ToPort": "4353"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "1026",
                        "IpProtocol": "udp",
                        "ToPort": "1026"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "6123",
                        "IpProtocol": "tcp",
                        "ToPort": "6128"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip Security Group: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "subnet1Az1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone1"
                },
                "CidrBlock": "10.0.1.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "1",
                                    " External Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        }
    }
}
