{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template for creating a full stack with a Across-AZs cluster of 2nic BIG-IPs, a 2 Availability Zone VPC, subnets, security groups and a webeserver (Bitnami LAMP stack with username bitnami **WARNING** This template creates Amazon EC2 Instances. You will be billed for the AWS resources used if you create a stack from this template.",
    "Mappings": {
        "BigipRegionMap": {
            "ap-northeast-1": {
                "Best": "ami-e801d089",
                "Better": "ami-2903d248",
                "Good": "ami-1402d375"
            },
            "ap-southeast-1": {
                "Best": "ami-f3439990",
                "Better": "ami-50419b33",
                "Good": "ami-f6439995"
            },
            "ap-southeast-2": {
                "Best": "ami-b58bbad6",
                "Better": "ami-d289b8b1",
                "Good": "ami-6489b807"
            },
            "eu-central-1": {
                "Best": "ami-1eb14c71",
                "Better": "ami-29b64b46",
                "Good": "ami-69b04d06"
            },
            "eu-west-1": {
                "Best": "ami-32c5bc41",
                "Better": "ami-f2394181",
                "Good": "ami-c2c7beb1"
            },
            "sa-east-1": {
                "Best": "ami-69c15205",
                "Better": "ami-73c2511f",
                "Good": "ami-94dd4ef8"
            },
            "us-east-1": {
                "Best": "ami-83cab794",
                "Better": "ami-3fc4b928",
                "Good": "ami-e2c9b4f5"
            },
            "us-west-1": {
                "Best": "ami-257c3345",
                "Better": "ami-3f7c335f",
                "Good": "ami-7d7c331d"
            },
            "us-west-2": {
                "Best": "ami-8b76a4eb",
                "Better": "ami-a977a5c9",
                "Good": "ami-2370a243"
            }
        },
        "WebserverRegionMap": {
            "ap-northeast-1": {
                "AMI": "ami-5b82503a"
            },
            "ap-southeast-1": {
                "AMI": "ami-2e67c24d"
            },
            "ap-southeast-2": {
                "AMI": "ami-3af5c559"
            },
            "eu-central-1": {
                "AMI": "ami-f8768b97"
            },
            "eu-west-1": {
                "AMI": "ami-9c5f25ef"
            },
            "sa-east-1": {
                "AMI": "ami-6a52c106"
            },
            "us-east-1": {
                "AMI": "ami-93fa8284"
            },
            "us-west-1": {
                "AMI": "ami-5f1b553f"
            },
            "us-west-2": {
                "AMI": "ami-c1e13da1"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORKING CONFIGURATION"
                    },
                    "Parameters": [
                        "Vpc",
                        "managementSubnetAz1",
                        "managementSubnetAz2",
                        "subnet1Az2",
                        "bigipManagementSecurityGroup",
                        "subnet1Az1",
                        "bigipExternalSecurityGroup",
                        "availabilityZone1",
                        "availabilityZone2"
                    ]
                },
                {
                    "Label": {
                        "default": "INSTANCE CONFIGURATION"
                    },
                    "Parameters": [
                        "adminUsername",
                        "adminPassword",
                        "imageName",
                        "instanceType",
                        "applicationInstanceType",
                        "licenseKey1",
                        "licenseKey2",
                        "managementGuiPort",
                        "sshKey",
                        "restrictedSrcAddress",
                        "iamAccessKey",
                        "iamSecretKey"
                    ]
                },
                {
                    "Label": {
                        "default": "VIRTUAL SERVICE CONFIGURATION"
                    },
                    "Parameters": [
                        "webserverPrivateIp"
                    ]
                },
                {
                    "Label": {
                        "default": "TAGS"
                    },
                    "Parameters": [
                        "application",
                        "environment",
                        "group",
                        "owner",
                        "costcenter"
                    ]
                }
            ],
            "ParameterLabels": {
                "Vpc": {
                    "default": "Vpc"
                },
                "adminPassword": {
                    "default": "Admin Password"
                },
                "adminUsername": {
                    "default": "Admin Username"
                },
                "application": {
                    "default": "Application"
                },
                "applicationInstanceType": {
                    "default": "Application Instance Type"
                },
                "availabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "availabilityZone2": {
                    "default": "Availability Zone 2"
                },
                "bigipExternalSecurityGroup": {
                    "default": "Big-IP External Security Group"
                },
                "bigipManagementSecurityGroup": {
                    "default": "Big-IP Management Security Group"
                },
                "costcenter": {
                    "default": "Costcenter"
                },
                "environment": {
                    "default": "Environment"
                },
                "group": {
                    "default": "Group"
                },
                "iamAccessKey": {
                    "default": "IAM Access Key"
                },
                "iamSecretKey": {
                    "default": "IAM Secret Key"
                },
                "imageName": {
                    "default": "Image Name"
                },
                "instanceType": {
                    "default": "Instance Type"
                },
                "licenseKey1": {
                    "default": "Licence Key1"
                },
                "managementGuiPort": {
                    "default": "Management GUI Port"
                },
                "managementSubnetAz1": {
                    "default": "Management Subnet AZ1"
                },
                "managementSubnetAz2": {
                    "default": "Management Subnet AZ2"
                },
                "owner": {
                    "default": "Owner"
                },
                "restrictedSrcAddress": {
                    "default": "Restricted Source Addresses"
                },
                "sshKey": {
                    "default": "SSH Key"
                },
                "subnet1Az1": {
                    "default": "Subnet AZ1"
                },
                "subnet1Az2": {
                    "default": "Subnet AZ2"
                },
                "webserverPrivateIp": {
                    "default": "Application Address"
                }
            }
        }
    },
    "Outputs": {
        "Az1ApplicationSubnet": {
            "Description": "Az1Application Subnet Id",
            "Value": {
                "Ref": "Az1ApplicationSubnet"
            }
        },
        "Az2ApplicationSubnet": {
            "Description": "Az2Application Subnet Id",
            "Value": {
                "Ref": "Az2ApplicationSubnet"
            }
        },
        "Bigip1ExternalInterfacePrivateIp": {
            "Description": "Internally routable IP of the public interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1subnet1Az1Interface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip1InstanceId": {
            "Description": "Instance Id of BIG-IP in Amazon",
            "Value": {
                "Ref": "Bigip1Instance"
            }
        },
        "Bigip1ManagementEipAddress": {
            "Description": "IP address of the management port on BIG-IP",
            "Value": {
                "Ref": "Bigip1ManagementEipAddress"
            }
        },
        "Bigip1ManagementInterface": {
            "Description": "Management interface ID on BIG-IP",
            "Value": {
                "Ref": "Bigip1ManagementInterface"
            }
        },
        "Bigip1ManagementInterfacePrivateIp": {
            "Description": "Internally routable IP of the management interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1ManagementInterface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip1Url": {
            "Description": "BIG-IP Management GUI",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "Bigip1Instance",
                                "PublicIp"
                            ]
                        }
                    ]
                ]
            }
        },
        "Bigip1VipEipAddress": {
            "Description": "EIP address for VIP",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Ref": "Bigip1VipEipAddress"
                        },
                        ":80"
                    ]
                ]
            }
        },
        "Bigip1VipPrivateIp": {
            "Description": "VIP on External Interface Secondary IP 1",
            "Value": {
                "Fn::Select": [
                    "0",
                    {
                        "Fn::GetAtt": [
                            "Bigip1subnet1Az1Interface",
                            "SecondaryPrivateIpAddresses"
                        ]
                    }
                ]
            }
        },
        "Bigip1subnet1Az1Interface": {
            "Description": "External interface Id on BIG-IP",
            "Value": {
                "Ref": "Bigip1subnet1Az1Interface"
            }
        },
        "Bigip1subnet1Az1SelfEipAddress": {
            "Description": "IP Address of teh External interface attached to BIG-IP",
            "Value": {
                "Ref": "Bigip1subnet1Az1SelfEipAddress"
            }
        },
        "Bigip2ExternalInterfacePrivateIp": {
            "Description": "Internally routable IP of the public interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip2subnet1Az2Interface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip2InstanceId": {
            "Description": "Instance Id of BIG-IP in Amazon",
            "Value": {
                "Ref": "Bigip2Instance"
            }
        },
        "Bigip2ManagementEipAddress": {
            "Description": "IP address of the management port on BIG-IP",
            "Value": {
                "Ref": "Bigip2ManagementEipAddress"
            }
        },
        "Bigip2ManagementInterface": {
            "Description": "Management interface ID on BIG-IP",
            "Value": {
                "Ref": "Bigip2ManagementInterface"
            }
        },
        "Bigip2ManagementInterfacePrivateIp": {
            "Description": "Internally routable IP of the management interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip2ManagementInterface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip2Url": {
            "Description": "BIG-IP Management GUI",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "Bigip2Instance",
                                "PublicIp"
                            ]
                        }
                    ]
                ]
            }
        },
        "Bigip2subnet1Az2Interface": {
            "Description": "External interface Id on BIG-IP",
            "Value": {
                "Ref": "Bigip2subnet1Az2Interface"
            }
        },
        "Bigip2subnet1Az2SelfEipAddress": {
            "Description": "IP Address of teh External interface attached to BIG-IP",
            "Value": {
                "Ref": "Bigip2subnet1Az2SelfEipAddress"
            }
        },
        "DnsServers": {
            "Description": "DNS server for VPC",
            "Value": "10.0.0.2"
        },
        "Vpc": {
            "Description": "VPC ID",
            "Value": {
                "Ref": "Vpc"
            }
        },
        "WebserverPublicIp": {
            "Description": "Public IP for Webserver",
            "Value": {
                "Fn::GetAtt": [
                    "Webserver",
                    "PublicIp"
                ]
            }
        },
        "WebserverPublicUrl": {
            "Description": "Public URL for the Webserver",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "Webserver",
                                "PublicIp"
                            ]
                        }
                    ]
                ]
            }
        },
        "availabilityZone1": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "availabilityZone2": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip2Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "bigipExternalSecurityGroup": {
            "Description": "Public or External Security Group",
            "Value": {
                "Ref": "bigipExternalSecurityGroup"
            }
        },
        "bigipManagementSecurityGroup": {
            "Description": "Management Security Group",
            "Value": {
                "Ref": "bigipManagementSecurityGroup"
            }
        },
        "managementSubnetAz1": {
            "Description": "Az1Management Subnet Id",
            "Value": {
                "Ref": "managementSubnetAz1"
            }
        },
        "managementSubnetAz2": {
            "Description": "Az2Management Subnet Id",
            "Value": {
                "Ref": "managementSubnetAz2"
            }
        },
        "subnet1Az1": {
            "Description": "Az1External Subnet Id",
            "Value": {
                "Ref": "subnet1Az1"
            }
        },
        "subnet1Az2": {
            "Description": "Az2External Subnet Id",
            "Value": {
                "Ref": "subnet1Az2"
            }
        },
        "webserverPrivateIp": {
            "Description": "Private IP for Webserver",
            "Value": {
                "Fn::GetAtt": [
                    "Webserver",
                    "PrivateIp"
                ]
            }
        }
    },
    "Parameters": {
        "adminPassword": {
            "ConstraintDescription": "Verify your BIG-IP Admin Password",
            "Description": "Type your BIG-IP Admin Password",
            "MaxLength": "255",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "adminUsername": {
            "ConstraintDescription": "Verify your BIG-IP Admin Username",
            "Default": "admin",
            "Description": "Type your BIG-IP Admin Username",
            "MaxLength": "255",
            "MinLength": "1",
            "Type": "String"
        },
        "application": {
            "Default": "f5app",
            "Description": "Application Tag",
            "Type": "String"
        },
        "applicationInstanceType": {
            "AllowedValues": [
                "t1.micro",
                "m3.medium",
                "m3.xlarge",
                "m2.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type",
            "Default": "t1.micro",
            "Description": "Webserver EC2 instance type",
            "Type": "String"
        },
        "availabilityZone1": {
            "Description": "Name of an Availability Zone in this Region",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "availabilityZone2": {
            "Description": "Name of an Availability Zone in this Region",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "bigiqAddress": {
            "ConstraintDescription": "Verify your BIG-IQ Hostname or IP",
            "Description": "Type your BIG-IQ Hostname or IP",
            "MaxLength": "255",
            "MinLength": "1",
            "Type": "String"
        },
        "bigiqLicensePoolUUID": {
            "ConstraintDescription": "Verify your BIG-IQ License Pool UUID",
            "Description": "Type or paste your BIG-IQ License Pool UUID",
            "MaxLength": "255",
            "MinLength": "1",
            "Type": "String"
        },
        "bigiqPassword": {
            "ConstraintDescription": "Verify your BIG-IQ Password",
            "Description": "Type your BIG-IQ Password",
            "MaxLength": "255",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "bigiqUsername": {
            "ConstraintDescription": "Verify your BIG-IQ Username.",
            "Description": "Type your BIG-IQ Username",
            "MaxLength": "255",
            "MinLength": "1",
            "Type": "String"
        },
        "costcenter": {
            "Default": "f5costcenter",
            "Description": "Costcenter Tag",
            "Type": "String"
        },
        "environment": {
            "Default": "f5env",
            "Description": "Environment Name Tag",
            "Type": "String"
        },
        "group": {
            "Default": "f5group",
            "Description": "Group Tag",
            "Type": "String"
        },
        "iamAccessKey": {
            "AllowedPattern": "[\\w]*",
            "ConstraintDescription": "can contain only ASCII characters.",
            "Description": "IAM Access Key",
            "MaxLength": "32",
            "MinLength": "16",
            "NoEcho": true,
            "Type": "String"
        },
        "iamSecretKey": {
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters.",
            "Description": "IAM Secret Key for BIG-IP",
            "MaxLength": "255",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "imageName": {
            "AllowedValues": [
                "Good",
                "Better",
                "Best"
            ],
            "ConstraintDescription": "Must be a valid F5 BIG-IP performance type",
            "Default": "Best",
            "Description": "F5 BIG-IP Performance Type",
            "Type": "String"
        },
        "instanceType": {
            "AllowedValues": [
                "m3.2xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "cc2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid BIG-IP EC2 instance type",
            "Default": "m3.2xlarge",
            "Description": "F5 BIG-IP Virtual Instance Type",
            "Type": "String"
        },
        "owner": {
            "Default": "f5owner",
            "Description": "Owner Tag",
            "Type": "String"
        },
        "restrictedSrcAddress": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "sshKey": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "ApplicationDefaultRoute": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "ApplicationRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ApplicationRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Application Route Table:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Application"
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "AttachGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "Az1ApplicationSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone1"
                },
                "CidrBlock": "10.0.3.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "1",
                                    " Application Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "Az1ApplicationSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ApplicationRouteTable"
                },
                "SubnetId": {
                    "Ref": "Az1ApplicationSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az1ExternalSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ExternalRouteTable"
                },
                "SubnetId": {
                    "Ref": "subnet1Az1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az1ManagementSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ManagementRouteTable"
                },
                "SubnetId": {
                    "Ref": "managementSubnetAz1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az2ApplicationSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone2"
                },
                "CidrBlock": "10.0.13.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "2",
                                    " Application Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "Az2ApplicationSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ApplicationRouteTable"
                },
                "SubnetId": {
                    "Ref": "Az2ApplicationSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az2ExternalSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ExternalRouteTable"
                },
                "SubnetId": {
                    "Ref": "subnet1Az2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Az2ManagementSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "ManagementRouteTable"
                },
                "SubnetId": {
                    "Ref": "managementSubnetAz2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "Bigip1Instance": {
            "DependsOn": "Bigip2Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "001-unpack-libs": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "tar xvzf /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/;",
                                            "mv /config/cloud/aws/F5Networks-f5-cloud-libs-* /config/cloud/aws/f5-cloud-libs;",
                                            "cd /config/cloud/aws/f5-cloud-libs;",
                                            "npm install --production;"
                                        ]
                                    ]
                                }
                            },
                            "002-1nic-setup": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        []
                                    ]
                                }
                            },
                            "003-onboard-BIG-IP": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "NAME_SERVER=`/config/cloud/aws/f5-cloud-libs/scripts/aws/getNameServer.sh eth1`;",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/onboard.js",
                                            "--log-level verbose",
                                            "-o  /var/log/onboard.log",
                                            "--background",
                                            "--no-reboot",
                                            "--host localhost",
                                            "--user ",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            " ",
                                            "--password '",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'",
                                            "--set-password admin:'",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'",
                                            "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
                                            "--ntp 0.us.pool.ntp.org",
                                            "--ntp 1.us.pool.ntp.org",
                                            "--tz UTC",
                                            "--dns ${NAME_SERVER}",
                                            "--module ltm:nominal",
                                            "--module asm:nominal"
                                        ]
                                    ]
                                }
                            },
                            "005-custom-config": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--wait-for ONBOARD_DONE",
                                            "--file /config/cloud/aws/custom-config.sh",
                                            "--cwd /config/cloud/aws",
                                            "--log-level verbose",
                                            "-o /var/log/custom-config.log",
                                            "--background"
                                        ]
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/config/cloud/aws/custom-config.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            ". /config/cloud/aws/custom.config\n",
                                            ". /config/cloud/aws/firstrun.utils\n",
                                            "date\n",
                                            "echo 'starting tmsh config'\n",
                                            "tmsh modify sys global-settings aws-access-key ${IAM_ACCESS_KEY}\n",
                                            "tmsh modify sys global-settings aws-secret-key ${IAM_SECRET_KEY}\n",
                                            "tmsh create net vlan external interfaces add { 1.1 } \n",
                                            "tmsh create net self ${EXTIP}/${EXTMASK} vlan external allow-service add { tcp:4353 udp:1026 tcp:6123 tcp:6124 tcp:6125 tcp:6126 tcp:6127 tcp:6128 }\n",
                                            "tmsh create sys folder /LOCAL_ONLY device-group none traffic-group traffic-group-local-only\n",
                                            "tmsh create net route /LOCAL_ONLY/default network default gw ${GATEWAY}\n",
                                            "tmsh mv cm device bigip1 ${HOSTNAME}\n",
                                            "tmsh modify sys db dhclient.mgmt { value disable }\n",
                                            "tmsh modify cm device ${HOSTNAME} configsync-ip ${EXTIP} unicast-address { { effective-ip ${EXTIP} effective-port 1026 ip ${EXTIP} } }\n",
                                            "tmsh save /sys config\n",
                                            "echo 'start install biqiq license'\n",
                                            ". /config/cloud/aws/license_from_bigiq.sh\n",
                                            "checkStatusnoret\n",
                                            "sleep 20 \n",
                                            "tmsh save /sys config\n",
                                            "echo 'sleeping additional 180 secs to wait for peer to boot'\n",
                                            "sleep 300\n",
                                            "tmsh modify cm trust-domain Root ca-devices add { ${PEER_MGMTIP} } name ${PEER_HOSTNAME} username admin password \"${BIGIP_ADMIN_PASSWORD}\"\n",
                                            "tmsh create cm device-group across_az_failover_group type sync-failover devices add { ${HOSTNAME} ${PEER_HOSTNAME} } auto-sync enabled\n",
                                            "tmsh run cm config-sync to-group across_az_failover_group\n",
                                            "tmsh create ltm pool ${APPNAME}-pool members add { ${POOLMEM}:${POOLMEMPORT} } monitor http\n",
                                            "curl -o /home/admin/asm-policy-linux-high.xml http://cdn.f5.com/product/templates/utils/asm-policy-linux-high.xml \n",
                                            "tmsh load asm policy file /home/admin/asm-policy-linux-high.xml\n",
                                            "# modify asm policy names below (ex. /Common/linux-high) to match name in xml\n",
                                            "tmsh modify asm policy /Common/linux-high active\n",
                                            "tmsh create ltm policy app-ltm-policy strategy first-match legacy\n",
                                            "tmsh modify ltm policy app-ltm-policy controls add { asm }\n",
                                            "tmsh modify ltm policy app-ltm-policy rules add { associate-asm-policy { actions replace-all-with { 0 { asm request enable policy /Common/linux-high } } } }\n",
                                            "tmsh create ltm virtual /Common/AZ1-${APPNAME}-${VIRTUALSERVERPORT} { destination ${EXTPRIVIP}:${VIRTUALSERVERPORT} mask 255.255.255.255 ip-protocol tcp policies replace-all-with { app-ltm-policy { } } pool /Common/${APPNAME}-pool profiles replace-all-with { http { } tcp { } websecurity { } } security-log-profiles replace-all-with { \"Log illegal requests\" } source 0.0.0.0/0 source-address-translation { type automap } translate-address enabled translate-port enabled}\n",
                                            "tmsh create ltm virtual /Common/AZ2-${APPNAME}-${VIRTUALSERVERPORT} { destination ${PEER_EXTPRIVIP}:${VIRTUALSERVERPORT} mask 255.255.255.255 ip-protocol tcp policies replace-all-with { app-ltm-policy { } } pool /Common/${APPNAME}-pool profiles replace-all-with { http { } tcp { } websecurity { } } security-log-profiles replace-all-with { \"Log illegal requests\" } source 0.0.0.0/0 source-address-translation { type automap } translate-address enabled translate-port enabled}\n",
                                            "tmsh modify ltm virtual-address ${EXTPRIVIP} traffic-group none\n",
                                            "tmsh modify ltm virtual-address ${PEER_EXTPRIVIP} traffic-group none\n",
                                            "curl -sSk -o /config/cloud/aws/f5.aws_advanced_ha.v1.2.0rc1.tmpl --max-time 15 https://cdn.f5.com/product/templates/f5.aws_advanced_ha.v1.2.0rc1.tmpl\n",
                                            "tmsh load sys application template /config/cloud/aws/f5.aws_advanced_ha.v1.2.0rc1.tmpl\n",
                                            "tmsh create /sys application service HA_Across_AZs template f5.aws_advanced_ha.v1.2.0rc1 tables add { eip_mappings__mappings { column-names { eip az1_vip az2_vip } rows { { row { ${VIPEIP} /Common/${EXTPRIVIP} /Common/${PEER_EXTPRIVIP} } } } } } variables add { eip_mappings__inbound { value yes } }\n",
                                            "tmsh modify sys application service HA_Across_AZs.app/HA_Across_AZs execute-action definition\n",
                                            "tmsh run cm config-sync to-group across_az_failover_group\n",
                                            "sleep 15\n",
                                            "curl -sSk -u admin:\"${BIGIP_ADMIN_PASSWORD}\" -H 'Content-Type: application/json' -X PATCH -d '{\"execute-action\":\"definition\"}' https://${PEER_MGMTIP}/mgmt/tm/sys/application/service/~Common~HA_Across_AZs.app~HA_Across_AZs\n",
                                            "tmsh modify cm device-group datasync-global-dg devices modify { ${HOSTNAME} { set-sync-leader } }\n",
                                            "tmsh run cm config-sync to-group datasync-global-dg\n",
                                            "tmsh save /sys config\n",
                                            "date\n",
                                            "# remove_license_from_bigiq.sh uses firstrun.config but for security purposes, typically want to remove firstrun.config\n",
                                            "# rm /config/cloud/aws/firstrun.config\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/custom.config": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "HOSTNAME=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
                                            "BIGIP_ADMIN_USERNAME='",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            "'\n",
                                            "BIGIP_ADMIN_PASSWORD='",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'\n",
                                            "BIGIQ_ADDRESS='",
                                            {
                                                "Ref": "bigiqAddress"
                                            },
                                            "'\n",
                                            "BIGIQ_USERNAME='",
                                            {
                                                "Ref": "bigiqUsername"
                                            },
                                            "'\n",
                                            "BIGIQ_PASSWORD='",
                                            {
                                                "Ref": "bigiqPassword"
                                            },
                                            "'\n",
                                            "BIGIQ_LICENSE_POOL_UUID='",
                                            {
                                                "Ref": "bigiqLicensePoolUUID"
                                            },
                                            "'\n",
                                            "BIGIP_DEVICE_ADDRESS='",
                                            {
                                                "Ref": "Bigip1ManagementEipAddress"
                                            },
                                            "'\n",
                                            "GATEWAY_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`\n",
                                            "GATEWAY_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`\n",
                                            "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}\n",
                                            "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}\n",
                                            "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`\n",
                                            "VPC_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/vpc-ipv4-cidr-block`\n",
                                            "VPC_NET=${VPC_CIDR_BLOCK%/*}\n",
                                            "VPC_PREFIX=${VPC_CIDR_BLOCK#*/}\n",
                                            "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+2 }'`\n",
                                            "MGMTIP='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip1ManagementInterface",
                                                    "PrimaryPrivateIpAddress"
                                                ]
                                            },
                                            "'\n",
                                            "EXTIP='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip1subnet1Az1Interface",
                                                    "PrimaryPrivateIpAddress"
                                                ]
                                            },
                                            "'\n",
                                            "EXTPRIVIP='",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "Bigip1subnet1Az1Interface",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "'\n",
                                            "EXTMASK='24'\n",
                                            "POOLMEM='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Webserver",
                                                    "PrivateIp"
                                                ]
                                            },
                                            "'\n",
                                            "POOLMEMPORT=80\n",
                                            "APPNAME='demo-app-1'\n",
                                            "VIRTUALSERVERPORT=80\n",
                                            "CRT='default.crt'\n",
                                            "KEY='default.key'\n",
                                            "PEER_HOSTNAME='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip2Instance",
                                                    "PrivateDnsName"
                                                ]
                                            },
                                            "'\n",
                                            "PEER_MGMTIP='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip2ManagementInterface",
                                                    "PrimaryPrivateIpAddress"
                                                ]
                                            },
                                            "'\n",
                                            "PEER_EXTPRIVIP='",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "Bigip2subnet1Az2Interface",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "'\n",
                                            "VIPEIP='",
                                            {
                                                "Ref": "Bigip1VipEipAddress"
                                            },
                                            "'\n",
                                            "IAM_ACCESS_KEY='",
                                            {
                                                "Ref": "iamAccessKey"
                                            },
                                            "'\n",
                                            "IAM_SECRET_KEY='",
                                            {
                                                "Ref": "iamSecretKey"
                                            },
                                            "'\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/firstrun.utils": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/firstrun.utils"
                            },
                            "/config/cloud/f5-cloud-libs.tar.gz": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/v1.2.0"
                            },
                            "/tmp/license_from_bigiq.sh": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/license_from_bigiq_v5.0.sh"
                            },
                            "/tmp/remove_license_from_bigiq.sh": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/remove_license_from_bigiq_v5.0.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "BigipRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "imageName"
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "instanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Management Interface",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1ManagementInterface"
                        }
                    },
                    {
                        "Description": "Public or External Interface",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1subnet1Az1Interface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Big-IP: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "Bigip1Instance",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "Bigip1ManagementEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip1ManagementEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip1ManagementEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip1ManagementInterface"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "Bigip1ManagementInterface": {
            "Properties": {
                "Description": "Management Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipManagementSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "managementSubnetAz1"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "Bigip1VipEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip1VipEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip1VipEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip1subnet1Az1Interface"
                },
                "PrivateIpAddress": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAtt": [
                                "Bigip1subnet1Az1Interface",
                                "SecondaryPrivateIpAddresses"
                            ]
                        }
                    ]
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "Bigip1subnet1Az1Interface": {
            "Properties": {
                "Description": "Public External Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipExternalSecurityGroup"
                    }
                ],
                "SecondaryPrivateIpAddressCount": "1",
                "SubnetId": {
                    "Ref": "subnet1Az1"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "Bigip1subnet1Az1SelfEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip1subnet1Az1SelfEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip1subnet1Az1SelfEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip1subnet1Az1Interface"
                },
                "PrivateIpAddress": {
                    "Fn::GetAtt": [
                        "Bigip1subnet1Az1Interface",
                        "PrimaryPrivateIpAddress"
                    ]
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "Bigip2Instance": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "001-unpack-libs": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "tar xvzf /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/;",
                                            "mv /config/cloud/aws/F5Networks-f5-cloud-libs-* /config/cloud/aws/f5-cloud-libs;",
                                            "cd /config/cloud/aws/f5-cloud-libs;",
                                            "npm install --production;"
                                        ]
                                    ]
                                }
                            },
                            "002-1nic-setup": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        []
                                    ]
                                }
                            },
                            "003-onboard-BIG-IP": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "NAME_SERVER=`/config/cloud/aws/f5-cloud-libs/scripts/aws/getNameServer.sh eth1`;",
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/onboard.js",
                                            "--log-level verbose",
                                            "-o  /var/log/onboard.log",
                                            "--background",
                                            "--no-reboot",
                                            "--host localhost",
                                            "--user ",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            " ",
                                            "--password '",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'",
                                            "--set-password admin:'",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'",
                                            "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
                                            "--ntp 0.us.pool.ntp.org",
                                            "--ntp 1.us.pool.ntp.org",
                                            "--tz UTC",
                                            "--dns ${NAME_SERVER}",
                                            "--module ltm:nominal",
                                            "--module asm:nominal"
                                        ]
                                    ]
                                }
                            },
                            "005-custom-config": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "f5-rest-node /config/cloud/aws/f5-cloud-libs/scripts/runScript.js",
                                            "--wait-for ONBOARD_DONE",
                                            "--file /config/cloud/aws/custom-config.sh",
                                            "--cwd /config/cloud/aws",
                                            "--log-level verbose",
                                            "-o /var/log/custom-config.log",
                                            "--background"
                                        ]
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/config/cloud/aws/custom-config.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            ". /config/cloud/aws/custom.config\n",
                                            ". /config/cloud/aws/firstrun.utils\n",
                                            "date\n",
                                            "echo 'starting tmsh config'\n",
                                            "tmsh modify sys global-settings aws-access-key ${IAM_ACCESS_KEY}\n",
                                            "tmsh modify sys global-settings aws-secret-key ${IAM_SECRET_KEY}\n",
                                            "tmsh create net vlan external interfaces add { 1.1 } \n",
                                            "tmsh create net self ${EXTIP}/${EXTMASK} vlan external allow-service add { tcp:4353 udp:1026 tcp:6123 tcp:6124 tcp:6125 tcp:6126 tcp:6127 tcp:6128 }\n",
                                            "tmsh create sys folder /LOCAL_ONLY device-group none traffic-group traffic-group-local-only\n",
                                            "tmsh create net route /LOCAL_ONLY/default network default gw ${GATEWAY}\n",
                                            "tmsh mv cm device bigip1 ${HOSTNAME}\n",
                                            "tmsh modify sys db dhclient.mgmt { value disable }\n",
                                            "tmsh modify cm device ${HOSTNAME} configsync-ip ${EXTIP} unicast-address { { effective-ip ${EXTIP} effective-port 1026 ip ${EXTIP} } }\n",
                                            "tmsh save /sys config\n",
                                            "echo 'start install biqiq license'\n",
                                            ". /config/cloud/aws/license_from_bigiq.sh\n",
                                            "checkStatusnoret\n",
                                            "sleep 20 \n",
                                            "tmsh save /sys config\n",
                                            "tmsh save /sys config\n",
                                            "date\n",
                                            "# remove_license_from_bigiq.sh uses firstrun.config but for security purposes, typically want to remove firstrun.config\n",
                                            "# rm /config/cloud/aws/firstrun.config\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/custom.config": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "HOSTNAME=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
                                            "BIGIP_ADMIN_USERNAME='",
                                            {
                                                "Ref": "adminUsername"
                                            },
                                            "'\n",
                                            "BIGIP_ADMIN_PASSWORD='",
                                            {
                                                "Ref": "adminPassword"
                                            },
                                            "'\n",
                                            "BIGIQ_ADDRESS='",
                                            {
                                                "Ref": "bigiqAddress"
                                            },
                                            "'\n",
                                            "BIGIQ_USERNAME='",
                                            {
                                                "Ref": "bigiqUsername"
                                            },
                                            "'\n",
                                            "BIGIQ_PASSWORD='",
                                            {
                                                "Ref": "bigiqPassword"
                                            },
                                            "'\n",
                                            "BIGIQ_LICENSE_POOL_UUID='",
                                            {
                                                "Ref": "bigiqLicensePoolUUID"
                                            },
                                            "'\n",
                                            "BIGIP_DEVICE_ADDRESS='",
                                            {
                                                "Ref": "Bigip2ManagementEipAddress"
                                            },
                                            "'\n",
                                            "GATEWAY_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`\n",
                                            "GATEWAY_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`\n",
                                            "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}\n",
                                            "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}\n",
                                            "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`\n",
                                            "VPC_CIDR_BLOCK=`curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/vpc-ipv4-cidr-block`\n",
                                            "VPC_NET=${VPC_CIDR_BLOCK%/*}\n",
                                            "VPC_PREFIX=${VPC_CIDR_BLOCK#*/}\n",
                                            "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+2 }'`\n",
                                            "MGMTIP='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip2ManagementInterface",
                                                    "PrimaryPrivateIpAddress"
                                                ]
                                            },
                                            "'\n",
                                            "EXTIP='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Bigip2subnet1Az2Interface",
                                                    "PrimaryPrivateIpAddress"
                                                ]
                                            },
                                            "'\n",
                                            "EXTPRIVIP='",
                                            {
                                                "Fn::Select": [
                                                    "0",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "Bigip2subnet1Az2Interface",
                                                            "SecondaryPrivateIpAddresses"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "'\n",
                                            "EXTMASK='24'\n",
                                            "POOLMEM='",
                                            {
                                                "Fn::GetAtt": [
                                                    "Webserver",
                                                    "PrivateIp"
                                                ]
                                            },
                                            "'\n",
                                            "POOLMEMPORT=80\n",
                                            "APPNAME='demo-app-1'\n",
                                            "VIRTUALSERVERPORT=80\n",
                                            "CRT='default.crt'\n",
                                            "KEY='default.key'\n",
                                            "IAM_ACCESS_KEY='",
                                            {
                                                "Ref": "iamAccessKey"
                                            },
                                            "'\n",
                                            "IAM_SECRET_KEY='",
                                            {
                                                "Ref": "iamSecretKey"
                                            },
                                            "'\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/firstrun.utils": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/firstrun.utils"
                            },
                            "/config/cloud/f5-cloud-libs.tar.gz": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/v1.2.0"
                            },
                            "/tmp/license_from_bigiq.sh": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/license_from_bigiq_v5.0.sh"
                            },
                            "/tmp/remove_license_from_bigiq.sh": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "http://cdn.f5.com/product/templates/utils/remove_license_from_bigiq_v5.0.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "BigipRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "imageName"
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "instanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Management Interface",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip2ManagementInterface"
                        }
                    },
                    {
                        "Description": "Public or External Interface",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip2subnet1Az2Interface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Big-IP: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "Bigip2Instance",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "Bigip2ManagementEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip2ManagementEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip2ManagementEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip2ManagementInterface"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "Bigip2ManagementInterface": {
            "Properties": {
                "Description": "Management Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipManagementSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "managementSubnetAz2"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "Bigip2subnet1Az2Interface": {
            "Properties": {
                "Description": "Public External Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipExternalSecurityGroup"
                    }
                ],
                "SecondaryPrivateIpAddressCount": "1",
                "SubnetId": {
                    "Ref": "subnet1Az2"
                }
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "Bigip2subnet1Az2SelfEipAddress": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "Bigip2subnet1Az2SelfEipAssociation": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "Bigip2subnet1Az2SelfEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "Bigip2subnet1Az2Interface"
                },
                "PrivateIpAddress": {
                    "Fn::GetAtt": [
                        "Bigip2subnet1Az2Interface",
                        "PrimaryPrivateIpAddress"
                    ]
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "ExternalDefaultRoute": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "ExternalRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ExternalRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "External Route Table",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "External"
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "InternetGateway: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "ManagementDefaultRoute": {
            "DependsOn": "AttachGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "ManagementRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ManagementRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Management Route Table",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Mgmt"
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "Vpc": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Vpc: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "Webserver": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "WebserverRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "applicationInstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "Description": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    " Webserver Network Interface"
                                ]
                            ]
                        },
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "WebserverSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "Az1ApplicationSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Webserver:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#cloud-config",
                                "runcmd:",
                                " - sudo docker run --name demo -p 80:80 -d f5devcentral/f5-demo-app:latest"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "WebserverSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable Access to Webserver",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Webserver Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "bigipExternalSecurityGroup": {
            "Properties": {
                "GroupDescription": "Public or External interface rules",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "4353",
                        "IpProtocol": "tcp",
                        "ToPort": "4353"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "1026",
                        "IpProtocol": "udp",
                        "ToPort": "1026"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "6123",
                        "IpProtocol": "tcp",
                        "ToPort": "6128"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip External Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "bigipManagementSecurityGroup": {
            "Properties": {
                "GroupDescription": "BIG-IP Management UI rules",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip Management Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "managementSubnetAz1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone1"
                },
                "CidrBlock": "10.0.0.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "1",
                                    " Management Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "managementSubnetAz2": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone2"
                },
                "CidrBlock": "10.0.10.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "2",
                                    " Management Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "subnet1Az1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone1"
                },
                "CidrBlock": "10.0.1.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "1",
                                    " External Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "subnet1Az2": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "availabilityZone2"
                },
                "CidrBlock": "10.0.11.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Az",
                                    "2",
                                    " External Subnet:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::Subnet"
        }
    }
}
